# Main context - these settings apply globally
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # WebSocket upgrade mapping
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Rate limiting zone - THIS IS THE CORRECTED SYNTAX
    # This creates a memory zone called "login_limit" that tracks IPs
    # allowing 10 requests per minute per IP
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=10r/m;
    limit_req_status 429;
    
    # Define upstream servers
    upstream web_app {
        server web:80;
    }
    
    upstream api_gateway_upstream {
        server api-gateway:80;
    }
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Enhanced logging to help debug IP forwarding
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'Forwarded-For: "$http_x_forwarded_for" '
                       'Real-IP: "$http_x_real_ip"';
    
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name inventory166.az www.inventory166.az 10.0.1.60;
        return 301 https://$server_name$request_uri;
    }
    
    # Main HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name inventory166.az www.inventory166.az 10.0.1.60;
        
        ssl_certificate /etc/nginx/ssl/inventory166.crt;
        ssl_certificate_key /etc/nginx/ssl/inventory166.key;
        
        client_max_body_size 20M;
        
        # Main application proxy
        location / {
            proxy_pass http://web_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        location /api/token/ {
            proxy_pass http://web_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            proxy_pass_header Set-Cookie;
        }
        
        # Login endpoint with rate limiting
        # This applies the rate limit we defined earlier
        # burst=5 allows short bursts, nodelay processes them immediately
        location /api/auth/login {
            limit_req zone=login_limit burst=5 nodelay;
            
            proxy_pass http://api_gateway_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add reasonable timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # General API Gateway proxy
        location /api/ {
            proxy_pass http://api_gateway_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /notificationHub {
            proxy_pass http://notification-service:80;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            proxy_buffering off;
            proxy_cache off;
        }
        
        # Static images for products
        location /images/products/ {
            alias /app/storage/images/products/;
            expires 365d;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            try_files $uri $uri/ =404;
        }
        
        # Static images for routes
        location /images/routes/ {
            alias /app/storage/images/routes/;
            expires 365d;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            try_files $uri $uri/ =404;
        }
    }
}