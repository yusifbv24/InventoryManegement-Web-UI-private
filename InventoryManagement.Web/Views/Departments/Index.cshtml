@model PagedResultDto<DepartmentViewModel>
@{
    ViewData["Title"] = "Departments";
    var currentSearch = ViewBag.CurrentSearch as string ?? null;
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Departments</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Home/Dashboard">Dashboard</a></li>
        <li class="breadcrumb-item active">Departments</li>
    </ol>

    <!-- Stats Cards (unchanged) -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-start-3 border-start-primary shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Total Departments</h6>
                            <h3 class="mb-0">@Model.TotalCount</h3>
                        </div>
                        <div class="icon-shape bg-primary-soft text-primary rounded-3">
                            <i class="fas fa-building fa-lg"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-start-3 border-start-success shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Active</h6>
                            <h3 class="mb-0 text-success">@(Model.ActiveItems ?? ViewBag.ActiveDepartments)</h3>
                        </div>
                        <div class="icon-shape bg-success-soft text-success rounded-3">
                            <i class="fas fa-check-circle fa-lg"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-start-3 border-start-secondary shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Inactive</h6>
                            <h3 class="mb-0 text-secondary">@(Model.InActiveItems ?? ViewBag.InActiveDepartments)</h3>
                        </div>
                        <div class="icon-shape bg-secondary-soft text-secondary rounded-3">
                            <i class="fas fa-times-circle fa-lg"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-start-3 border-start-info shadow-sm">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="text-muted mb-1">Total Products</h6>
                            <h3 class="mb-0">@(Model.ItemsInWithProducts ?? ViewBag.DepartmentsInWithProducts)</h3>
                        </div>
                        <div class="icon-shape bg-info-soft text-info rounded-3">
                            <i class="fas fa-boxes fa-lg"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Card (unchanged) -->
    <div class="card shadow-sm mb-4">
        <div class="card-body p-3">
            <div class="row g-3 align-items-center">
                <div class="col-lg-4 col-md-6">
                    <div class="input-group">
                        <span class="input-group-text bg-transparent border-end-0">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="text" id="searchInput" class="form-control border-start-0"
                               placeholder="Search departments...">
                    </div>
                </div>

                <div class="col-lg-2 col-md-6">
                    <select id="statusFilter" class="form-select">
                        <option value="">All Status</option>
                        <option value="active">Active</option>
                        <option value="inactive">Inactive</option>
                    </select>
                </div>

                <div class="col-lg-3 col-md-6">
                    <select id="sortBy" class="form-select">
                        <option value="name">Sort by Name</option>
                        <option value="products">Sort by Products</option>
                        <option value="workers">Sort by Workers</option>
                        <option value="created">Sort by Date</option>
                    </select>
                </div>

                <div class="col-lg-3 col-md-6">
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-secondary flex-grow-1" onclick="resetFilters()">
                            <i class="fas fa-redo me-1"></i>Reset
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Departments Table - MODIFIED -->
    <div class="card shadow-sm">
        <div class="card-header bg-white border-bottom-0 py-3">
            <div class="row align-items-center">
                <div class="col">
                    <partial name="_DepartmentPagination" model="Model" />
                </div>
                <div class="col-auto">
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Create" class="btn btn-primary btn-sm">
                            <i class="fas fa-plus"></i> New Department
                        </a>
                    }
                    <button class="btn btn-outline-secondary btn-sm" onclick="exportDepartmentsToPDF()">
                        <i class="fas fa-file-pdf"></i> Export PDF
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model.Items.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0" id="departmentsTable">
                        <thead>
                            <tr>
                                <th>Department</th>
                                <th>Department Head</th>
                                <th>Description</th>
                                <th class="text-center">Products</th>
                                <th class="text-center">Workers</th>
                                <th>Status</th>
                                <th>Created</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var department in Model.Items)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="icon-shape bg-light text-primary rounded-2 p-2 me-3">
                                                <i class="fas fa-building"></i>
                                            </div>
                                            <div>
                                                <div class="fw-semibold">@department.Name</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(department.DepartmentHead))
                                        {
                                            <span class="text-dark">@department.DepartmentHead</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted fst-italic">Not assigned</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="text-truncate" style="max-width: 300px;">
                                            @if (!string.IsNullOrEmpty(department.Description))
                                            {
                                                @department.Description
                                            }
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <span class="badge bg-primary rounded-pill px-3 py-2">
                                            @department.ProductCount
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <span class="badge bg-info rounded-pill px-3 py-2">
                                            @department.WorkerCount
                                        </span>
                                    </td>
                                    <td>
                                        @if (department.IsActive)
                                        {
                                            <span class="badge bg-success-soft text-success py-2 px-3">
                                                <i class="fas fa-check-circle me-1"></i>Active
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary-soft text-secondary py-2 px-3">
                                                <i class="fas fa-times-circle me-1"></i>Inactive
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        <div class="text-muted small">
                                            @department.CreatedAt.ToString("MMM dd, yyyy")
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@department.Id"
                                               class="btn btn-sm btn-outline-info">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@department.Id"
                                               class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-danger"
                                                    onclick="deleteDepartment(@department.Id, '@department.Name')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-building fa-3x text-muted mb-3"></i>
                    <p class="text-muted">No departments found</p>
                </div>
            }
        </div>
        <div class="card-footer">
            <partial name="_DepartmentPagination" model="Model" />
        </div>
    </div>
</div>

<!-- Delete Modal (unchanged) -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle text-danger me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <strong class="text-danger" id="departmentName"></strong>?</p>
                <div class="alert alert-warning mb-0">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    This will permanently delete the department and affect associated products.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-1"></i>Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/pdf-export.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function() {
            const allDepartments = Array.from(document.querySelectorAll('#departmentsTable tr'));

            $('#statusFilter, #sortBy').on('change', function() {
                filterDepartments();
            });

            restoreFilterValues();
        });

        function filterDepartments() {
            const statusFilter = $('#statusFilter').val();
            const sortBy = $('#sortBy').val();

            const allRows = Array.from(document.querySelectorAll('#departmentsTable tr'));

            let visibleRows = allRows.filter(row => {
                const isActive = row.querySelector('.badge.bg-success-soft') !== null;
                const matchesStatus = !statusFilter ||
                    (statusFilter === 'active' && isActive) ||
                    (statusFilter === 'inactive' && !isActive);

                return matchesSearch && matchesStatus;
            });

            visibleRows.sort((a, b) => {
                switch(sortBy) {
                    case 'name':
                        const nameA = a.querySelector('.fw-semibold')?.textContent || '';
                        const nameB = b.querySelector('.fw-semibold')?.textContent || '';
                        return nameA.localeCompare(nameB);
                    case 'products':
                        const productsA = parseInt(a.querySelector('.badge.bg-primary')?.textContent) || 0;
                        const productsB = parseInt(b.querySelector('.badge.bg-primary')?.textContent) || 0;
                        return productsB - productsA;
                    case 'created':
                        const dateA = a.querySelector('td:nth-child(7) .text-muted')?.textContent || '';
                        const dateB = b.querySelector('td:nth-child(7) .text-muted')?.textContent || '';
                        return new Date(dateB) - new Date(dateA);
                    default:
                        return 0;
                }
            });

            const tbody = document.getElementById('departmentsTable');
            tbody.innerHTML = '';
            visibleRows.forEach(row => tbody.appendChild(row));

            if (visibleRows.length === 0) {
                if (!document.getElementById('noResults')) {
                    tbody.innerHTML = `
                        <tr id="noResults">
                            <td colspan="8" class="text-center py-4">
                                <i class="fas fa-search fa-2x text-muted mb-2"></i>
                                <p class="text-muted">No departments found matching your filters</p>
                            </td>
                        </tr>
                    `;
                }
            }
        }

        function restoreFilterValues() {
            const params = new URLSearchParams(window.location.search);
            const search = params.get('search');
            if (search) {
                $('#searchInput').val(search);
            }
        }

        function applyFilters() {
            const searchTerm = $('#searchInput').val().trim();
            const params = new URLSearchParams();

            if (searchTerm) {
                params.append('search', searchTerm);
            }

            params.append('pageSize', '@Model.PageSize');
            params.append('pageNumber', '1');

            window.location.href = window.location.pathname + '?' + params.toString();
        }

        function resetFilters() {
            $('#searchInput').val('');
            window.location.href = window.location.pathname;
        }

        $('#searchInput').on('keypress', function(e) {
            if (e.which === 13) {
                applyFilters();
            }
        });

        function deleteDepartment(id, name) {
            $('#departmentName').text(name);
            $('#deleteForm').attr('action', '/Departments/Delete/' + id);
            $('#deleteModal').modal('show');
        }
    </script>

    <style>
        .card {
            border-radius: 12px;
            border: none;
        }

        .border-start-3 {
            border-left: 3px solid !important;
        }

        .icon-shape {
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .bg-primary-soft {
            background-color: rgba(13, 110, 253, 0.1) !important;
        }

        .bg-success-soft {
            background-color: rgba(25, 135, 84, 0.1) !important;
        }

        .bg-secondary-soft {
            background-color: rgba(108, 117, 125, 0.1) !important;
        }

        .bg-info-soft {
            background-color: rgba(13, 202, 240, 0.1) !important;
        }

        .table th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.5px;
            border-bottom: 2px solid #e9ecef;
        }

        .table tr {
            transition: all 0.2s ease;
        }

            .table tr:hover {
                background-color: rgba(248, 249, 250, 0.8);
                transform: translateY(-1px);
                box-shadow: 0 4px 6px rgba(0,0,0,0.03);
            }

        .table > tbody > tr:last-child > td {
            border-bottom: none;
        }

        .table td {
            vertical-align: middle;
            padding: 1.2rem 1rem;
        }
    </style>
}